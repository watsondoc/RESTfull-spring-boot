package com.test.controllers;

import com.test.entities.Attribute;
import com.test.entities.Person;
import com.test.entities.Value;
import com.test.repositories.AttributeRepository;
import com.test.repositories.ValueRepository;
import com.test.services.AttributeService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller    // This means that this class is a Controller
@RequestMapping(path="/api")
public class AttributeController {

    @Autowired // This means to get the bean called cityRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private AttributeService attributeService;

    @GetMapping(path = "/attributes")
    public @ResponseBody
    Iterable<Attribute> getAllAttributes() {
        // This returns a JSON or XML with the users
        Iterable<Attribute> mAttributes = attributeService.getAllAttributes();
        return mAttributes;
    }

    @DeleteMapping(value = "/attributes/{attrId}")
    public @ResponseBody
    String deleteAttribute(@PathVariable Long attrId, @RequestParam(value = "force", required = false) Boolean force) {
        attributeService.deleteAttributeById(attrId, force);
        return "Delete complete";
    }

    @GetMapping(value = "/attributes/{attr_id}")
    public @ResponseBody
    Attribute findId(@PathVariable Long attr_id) {
        return attributeService.getAttributeById(attr_id);
    }

    @PatchMapping(value = "/attributes/{attr_id}")
    public @ResponseBody
    Attribute updateById(@PathVariable Long attr_id, @RequestParam(value = "force", required = false) Boolean force, @RequestBody Attribute attribute) {
        return attributeService.updateAttributeById(attr_id,attribute,force);
    }

    @PostMapping(path = "/attributes")
    public @ResponseBody
    Attribute createAttribute(@RequestBody Attribute attribute){
        return attributeService.createAttribute(attribute);
    }

}
